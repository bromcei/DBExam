// <auto-generated />
using DBExam.DbContextServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBExam.Migrations
{
    [DbContext(typeof(HoneyBadgerDbContext))]
    [Migration("20230130132742_secondMigration")]
    partial class secondMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DBExam.Classes.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"), 1L, 1);

                    b.Property<string>("DepartmentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DBExam.Classes.DepartmentSupplier", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId", "SupplierId");

                    b.HasIndex("SupplierId");

                    b.ToTable("DepartmentSuppliers");
                });

            modelBuilder.Entity("DBExam.Classes.HoneyProduct", b =>
                {
                    b.Property<int>("HoneyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HoneyId"), 1L, 1);

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("HoneyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SellPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("HoneyId");

                    b.HasIndex("DepartmentID");

                    b.ToTable("HoneyProducts");
                });

            modelBuilder.Entity("DBExam.Classes.HoneyProductSupplier", b =>
                {
                    b.Property<int>("HoneyProductId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("HoneyProductId", "SupplierId");

                    b.HasIndex("SupplierId");

                    b.ToTable("HoneyProductsSupliers");
                });

            modelBuilder.Entity("DBExam.Classes.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("DBExam.Classes.DepartmentSupplier", b =>
                {
                    b.HasOne("DBExam.Classes.Department", "Department")
                        .WithMany("DepartmentSuppliers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBExam.Classes.Supplier", "Supplier")
                        .WithMany("DepartmentSuppliers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("DBExam.Classes.HoneyProduct", b =>
                {
                    b.HasOne("DBExam.Classes.Department", "ProductDepartment")
                        .WithMany("HoneyProducts")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductDepartment");
                });

            modelBuilder.Entity("DBExam.Classes.HoneyProductSupplier", b =>
                {
                    b.HasOne("DBExam.Classes.HoneyProduct", "HoneyProduct")
                        .WithMany("HoneyProductSuppliers")
                        .HasForeignKey("HoneyProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBExam.Classes.Supplier", "Supplier")
                        .WithMany("HoneyProductSuppliers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoneyProduct");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("DBExam.Classes.Department", b =>
                {
                    b.Navigation("DepartmentSuppliers");

                    b.Navigation("HoneyProducts");
                });

            modelBuilder.Entity("DBExam.Classes.HoneyProduct", b =>
                {
                    b.Navigation("HoneyProductSuppliers");
                });

            modelBuilder.Entity("DBExam.Classes.Supplier", b =>
                {
                    b.Navigation("DepartmentSuppliers");

                    b.Navigation("HoneyProductSuppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
